148 20 
149 20 
150 21 
151 20 
152 20 
153 20 
154 20 
155 20 
156 20 
157 20 
158 21 


Długość lini to 64 B - Co tyle czas minimalnie się zwiększa, 8 * 8Bajtów (typ Double) Przeskok do kolejnej linii wiaze sie ze skokiem czasu.

1038604 12469 
1039116 11577 
1039628 18027 
1040140 10355 
1040652 14082 
1041164 9451 
1041676 9957 
1042188 13084 
1042700 10705 
1043212 10537 
1043724 8991 
1044236 11151 
1044748 11653 
1045260 11723 
1045772 9872 


Długość strony: 4096 B - Co taką wartość czas zwiększa się znacząco (512 odległość razy 8 Bajtów, ponieważ używałem typów Double)

71245678
71231497
71599874
72588772
145987304
289128632 

Jak widać po 4 wczytaniu do linii, średni czas wydłuża się, oznacza to, że pamięć cache w procesorach zainstalowanych na serwerze LAK jest 4 drożna.
Wynik ten uzyskałem poprzez deklarację kilku tablic, oraz wykonywaniu na nich różnych operacji (wybór komórki pamięci która była przetwarzana, wybierany był losowao). Procesor po zapełneniu wszystkich linii "zbiorów", musiał zastępować znjadujące się w pamięci cache dane, nowymi z pamięci RAM, następował efekt migotania pamięci a co za tym idzie wydłużył się czas dosŧpu, co przedstawia znacznie zwiększona ilość cykli potrzebana do przeprowadzenia operacji.



124, 1392 
125, 1392 
126, 1392 
127, 5392 
128, 3596 
129, 1392 
130, 1348 
131, 1344 
132, 1412 
133, 1360 
134, 1412 
135, 1372 
136, 1376 
137, 1376 
138, 1376 
139, 1372 
140, 1364 
141, 1372 
142, 1360 
143, 1356 
144, 1376 
145, 1360 
146, 1376 
147, 1372 
148, 1380 
149, 1372 
150, 1360 
151, 1356 
152, 1380 
153, 1356 
154, 1412 
155, 1412 
156, 1376 
157, 1372 
158, 1380 
159, 1372 
160, 1412 
161, 1408 
162, 1376 
163, 1372 
164, 1376 
165, 1376 
166, 1376 
167, 1372 
168, 1380 
169, 1372 
170, 1360 
171, 1356 
172, 1380 
173, 1372 
174, 1376 
175, 1424 
176, 1376 
177, 1408 
178, 1376 
179, 1372 
180, 1428 
181, 1372 
182, 1376 
183, 1408 
184, 1384 
185, 1380 
186, 1384 
187, 1380 
188, 1376 
189, 1356 
190, 1376 
191, 6172 
192, 3660 
193, 1424 
194, 1340 
195, 1356 
196, 1384 
197, 1376 
198, 1412 
199, 1352 
200, 1384 
201, 1396 
202, 1400 
203, 1368 
204, 1384 
205, 1400 
206, 1400 
207, 1368 
208, 1384 
209, 1396 
210, 1400 
211, 1404 
212, 1368 
213, 1376 
214, 1380 
215, 1400 
216, 1376 
217, 1376 
218, 1420 
219, 1408 
220, 1376 
221, 1400 
222, 1376 
223, 1372 
224, 1420 
225, 1408 
226, 1360 
227, 1400 
228, 1376 
229, 1372 
230, 1384 
231, 1356 
232, 1376 
233, 1368 
234, 1384 
235, 1396 
236, 1400 
237, 1352 
238, 1384 
239, 1448 
240, 1400 
241, 1404 
242, 1384 
243, 1400 
244, 1448 
245, 1376 
246, 1384 
247, 1400 
248, 1404 
249, 1352 
250, 1356 
251, 1400 
252, 1396 
253, 1368 
254, 1384 
255, 5624 
256, 260 

127, 5392 	znaczące skoki
255, 5624 

255-127 = 128 Ponieważ tym razem przemieszczałem się po tablicy co 32768 (rozmiar pamięci L1) / 8 (DOUBLE którego używałem) = 4096 B, wynik ten należy pomnożcyć razy 32768 * 8 w efekcie uzyskamy 4096 KB czyli 4 MB To rozmiar pamięci cache L2. Po tabeli poruszałem się z iteracją rółną rozmiarowi pamięci cache L1 dlatego należao pomnożyć różnicę iteracji między znaczącymi zmianami czasu, przez 32768.
make kompiluje oba pliki
make test wlacza program testujacy droznosc
make test2 uruchamaia program testujacy rozmiar pamieci ram




Obliczanie co ile lini dane s? wrzucane do jednego zbioru:
Dane:
Rozmiar pami?ci cache L1 = 32KB = 1024 * 32 B
Rozmiar pojedynczej linii: 64 B
(wartości te zmierzyłem we wcześniejszych programach)

ilosc linii = 32 * 1024 / 64 (tyle ma jedna linia) = 512 linii
ponieważ z moich "badań" wynika ze paięc L1 jest 4 drożna, oznacza to że 
zbiorów jest : 1

ilość linii







